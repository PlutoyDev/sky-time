// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../dist"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Guild {
  id              String   @id @map("_id") @db.ObjectId
  user_ids        String[] @db.ObjectId
  webhook_ids     String[] @unique @db.ObjectId
  main_config_id  String?  @unique @db.ObjectId
  rept_config_ids String[] @unique @db.ObjectId

  users       User[]       @relation(fields: [user_ids], references: [id])
  webhooks    Webhook[]
  mainConfig  MainConfig?
  reptConfigs ReptConfig[]
}

model User {
  id            String   @id @map("_id") @db.ObjectId
  guild_ids     String[] @db.ObjectId
  username      String
  discriminator String
  avatar        String?
  refresh_token String
  access_token  String
  expires_at    DateTime

  admin Boolean @default(false)

  guild Guild[] @relation(fields: [guild_ids], references: [id])
}

model Webhook {
  id          String      @id @map("_id") @db.ObjectId
  token       String
  guild_id    String      @db.ObjectId
  channel_id  String      @db.ObjectId
  message_ids String[]    @db.ObjectId
  username    String[]
  avatar_url  String[]
  mention_ids String[]
  type        WebhookType

  guild Guild @relation(fields: [guild_id], references: [id])
}

enum WebhookType {
  TIMESTAMP
  REMINDER
  SYSTEM
}

model Message {
  id           String      @id @map("_id") @db.ObjectId
  webhook_id   String      @db.ObjectId
  created_at   DateTime
  delete_after DateTime?
  type         MessageType
}

enum MessageType {
  MAIN
  MAIN_RAW
  REPT
  REPT_RAW
  REMINDER
  SYSTEM_CHANGES
  SYSTEM_UPDATES
  SYSTEM_OWNER
}

model MainConfig {
  id                 String  @id @map("_id") @db.ObjectId
  guild_id           String  @unique @db.ObjectId
  title              String?
  show_last_update   Boolean @default(false)
  label_reset_daily  String?
  label_reset_eden   String?
  title_ts           String?
  show_count_ts      Boolean @default(false)
  label_arrival_ts   String?
  label_departure_ts String?
  show_promo         Boolean @default(true)

  guild Guild @relation(fields: [guild_id], references: [id])
}

model ReptConfig {
  id               String  @id @map("_id") @db.ObjectId
  guild_id         String  @db.ObjectId
  title            String?
  show_last_update Boolean @default(false)
  seperator        String?
  show_ongoing     Boolean @default(true)
  show_upcoming    Boolean @default(true)

  guild Guild @relation(fields: [guild_id], references: [id])
}
